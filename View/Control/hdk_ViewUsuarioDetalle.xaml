<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="HelpDesk.View.Control.hdk_ViewUsuarioDetalle"
        Title="Help Desk - Detalle del usuario" Height="533.909" Width="633.727" FontSize="13"
        WindowStartupLocation="CenterScreen" ResizeMode="NoResize"
        WindowStyle="None" Icon="/HelpDesk;component/Imagenes/diseno_icono.png"
        AllowsTransparency="True" Background="Transparent" Loaded="Window_Loaded">
    <Window.Resources>

        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#222"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF526C7B"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF003366"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="DarkGray"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#666"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="DarkGray"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#666"/>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19" RenderTransformOrigin="1.211,0.368"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton HorizontalAlignment="Center" x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="0"/>
                                </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty ="LayoutTransform.ScaleY" To ="1" Duration ="0:0:0.25"/>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty="Opacity" To ="1" Duration ="0:0:0.25"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty ="LayoutTransform.ScaleY" Duration ="0:0:0.25"/>
                                            <DoubleAnimation Storyboard.TargetName ="ExpandSite" Storyboard.TargetProperty="Opacity" Duration ="0:0:0.25"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Border Margin="10" BorderBrush="Red" BorderThickness="0.5" Background="White" CornerRadius="15">
        <Border.Effect>
            <DropShadowEffect Color="Black"
				Direction="320"
				BlurRadius="15"
				ShadowDepth="3" />
        </Border.Effect>
        <DockPanel LastChildFill="True" Background="Transparent">
            <Grid DockPanel.Dock="Top" Height="25">
                <TextBlock VerticalAlignment="Center" Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
					HorizontalAlignment="Center" />
                <Image Source="../../Imagenes/diseno_icono.png" VerticalAlignment="Top" Width="20" Height="20" Margin="8,5,537,0"/>
                <Rectangle x:Name="titleBar"
					Fill="Transparent"
					MouseLeftButtonDown="titleBar_MouseLeftButtonDown"/>
                <Button x:Name="closeButton"
					Style="{StaticResource CerrarStyle}"
					HorizontalAlignment="Right"
					Width="15" Margin="0,0,5,0" Height="15"
					Click="closeButton_Click"/>
                <Button x:Name="minButton"
					Style="{StaticResource MinimizarStyle}"
					HorizontalAlignment="Right"
					Width="15" Margin="0,0,25,0" Height="9"
					Click="minButton_Click"/>
            </Grid>
            <Grid>
                <Label Content="Usuario" FontSize="16" HorizontalAlignment="Left" Margin="51,39,0,0" VerticalAlignment="Top" Width="75"/>
                <TextBox HorizontalAlignment="Left" x:Name="txtUs" Height="30" Margin="176,42,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="208" IsReadOnly="True" />
                <Label Content="Nombre" FontSize="16" HorizontalAlignment="Left" Margin="51,76,0,0" VerticalAlignment="Top" Width="75"/>
                <TextBox HorizontalAlignment="Left" x:Name="txtNombre" Height="30" Margin="176,78,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="363" IsReadOnly="True" />
                <Label Content="Tipo" FontSize="16" HorizontalAlignment="Left" Margin="51,115,0,0" VerticalAlignment="Top" Width="98"/>
                <Label Content="Ext. Tel" FontSize="16" HorizontalAlignment="Left" Margin="400,115,0,0" VerticalAlignment="Top" Width="60"/>
                <TextBox HorizontalAlignment="Left" Height="30" x:Name="txtExTel" Margin="461,115,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="77" IsReadOnly="True" />
                <Label Content="Coordinación" FontSize="16" HorizontalAlignment="Left" Margin="51,234,0,0" VerticalAlignment="Top" Width="110"/>
                <Label Content="Departamento" FontSize="16" HorizontalAlignment="Left" Margin="51,271,0,0" VerticalAlignment="Top" Width="115"/>
                <Button Style="{StaticResource BotonAceptarStyle}" Content="Aceptar" x:Name="Aceptar" HorizontalAlignment="Center" Margin="274,424,264,0" VerticalAlignment="Top" Width="75" Click="Aceptar_Click" />
                <TextBox HorizontalAlignment="Left" x:Name="txtTipo" Height="30" Margin="176,116,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201" IsReadOnly="True" />
                <TextBox HorizontalAlignment="Left" FontSize="15" x:Name="txtCorreo" Height="30" Margin="176,156,0,0" TextWrapping="Wrap" VerticalAlignment="Top" IsReadOnly="True" Width="363" />
                <TextBox HorizontalAlignment="Left"  x:Name="txtCoordinacion" Height="30" Margin="176,236,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="363" IsReadOnly="True" />
                <Label Content="Área" FontSize="16" HorizontalAlignment="Left" Margin="51,309,0,0" VerticalAlignment="Top" Width="110"/>
                <TextBox HorizontalAlignment="Left" x:Name="txtDepto" Height="30" Margin="176,274,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="363" IsReadOnly="True" />
                <Label Content="Puesto" FontSize="16" HorizontalAlignment="Left" Margin="51,348,0,0" VerticalAlignment="Top" Width="112"/>
                <TextBox  HorizontalAlignment="Left" x:Name="txtArea" Height="30" Margin="176,312,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="363" IsReadOnly="True" />
                <TextBox HorizontalAlignment="Left" x:Name="txtPuesto" Height="30" Margin="176,350,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="363" IsReadOnly="True" />
                <Label Content="Email" FontSize="16" HorizontalAlignment="Left" Margin="51,152,0,0" VerticalAlignment="Top" Width="98"/>
                <Label Content="Institución" FontSize="16" HorizontalAlignment="Left" Margin="51,194,0,0" VerticalAlignment="Top" Width="110"/>
                <TextBox Name="txtInstitucion" HorizontalAlignment="Left" Height="30" Margin="176,196,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="363" />


                <Expander Header="Detalle del equipo" FontSize="16" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="32,392,0,0" VerticalAlignment="Top" Width="527" Expanded="expEquipos_Expanded" Name="expEquipos" Collapsed="expEquipos_Collapsed" Style="{DynamicResource ExpanderStyle1}">
                    <Expander.Content>
                        <Grid Height="116" Width="523">
                            <Border Margin="25,0,9,0" BorderBrush="Black" BorderThickness="0.6" CornerRadius="15">
                                <Grid Margin="0,0,19,0">
                                    <Border x:Name="BDRounded" BorderThickness="1" CornerRadius="15" BorderBrush="Transparent" Background="White" Margin="0,0,-18,0" />
                                    <DataGrid BorderBrush="Transparent" CanUserResizeColumns="False"  IsReadOnly="True" AlternatingRowBackground="LightGray" CanUserAddRows="false"  AutoGenerateColumns="False" EnableRowVirtualization="True"  ItemsSource="{Binding }"
                   Name="DataG" VerticalAlignment="Top" Margin="-1,0,-19,0" Height="115" FontSize="15">
                                        <DataGrid.OpacityMask>
                                            <VisualBrush  Visual="{Binding ElementName=BDRounded}" />
                                        </DataGrid.OpacityMask>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Id" Binding="{Binding idResponEq}" />
                                            <DataGridTextColumn Header="Tipo" Binding="{Binding nomTipoEquipo}" />
                                            <DataGridTextColumn Header="Marca Equipo" Binding="{Binding nomMarcaEquipo}" />
                                            <DataGridTextColumn Header="Serie Equipo" Binding="{Binding serieEquipo}" />
                                            <DataGridTextColumn Header="Procesador" Binding="{Binding procesador}" />
                                            <DataGridTextColumn Header="Memoria RAM" Binding="{Binding memoriaRam}" />
                                            <DataGridTextColumn Header="Disco Duro" Binding="{Binding discoDuro}" />
                                            <DataGridTextColumn Header="Marca Monitor" Binding="{Binding nomMarcaMonitor}" />
                                            <DataGridTextColumn Header="Serie Monitor" Binding="{Binding serieMonitor}" />
                                            <DataGridTextColumn Header="Marca Teclado" Binding="{Binding nomMarcaTeclado}" />
                                            <DataGridTextColumn Header="Serie Teclado" Binding="{Binding serieTeclado}" />
                                            <DataGridTextColumn Header="Marca Mouse" Binding="{Binding nomMarcaMouse}" />
                                            <DataGridTextColumn Header="Serie Mouse" Binding="{Binding serieMouse}" />
                                            <DataGridTextColumn Header="IP" Binding="{Binding ip}" />
                                            <DataGridTextColumn Header="Dirección MAC" Binding="{Binding mac}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Expander.Content>
                </Expander>
            </Grid>
        </DockPanel>
    </Border>
</Window>
